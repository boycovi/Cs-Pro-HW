// <auto-generated />
using System;
using Library.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Library.Persistence.Migrations
{
    [DbContext(typeof(LibrariesDbContest))]
    partial class LibrariesDbContestModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("libdb")
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Library.Core.Domain.Authors.Models.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Authors", "libdb");
                });

            modelBuilder.Entity("Library.Core.Domain.Bocks.Models.Bock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Bocks", "libdb");
                });

            modelBuilder.Entity("Library.Core.Domain.Bocks.Models.BocksAuthors", b =>
                {
                    b.Property<Guid>("BockId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.HasKey("BockId", "AuthorId");

                    b.HasIndex("AuthorId");

                    b.ToTable("BocksAuthors", "libdb");
                });

            modelBuilder.Entity("Library.Core.Domain.Bocks.Models.BocksAuthors", b =>
                {
                    b.HasOne("Library.Core.Domain.Authors.Models.Author", "Author")
                        .WithMany("BocksAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Core.Domain.Bocks.Models.Bock", "Bock")
                        .WithMany("BocksAuthors")
                        .HasForeignKey("BockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Bock");
                });

            modelBuilder.Entity("Library.Core.Domain.Authors.Models.Author", b =>
                {
                    b.Navigation("BocksAuthors");
                });

            modelBuilder.Entity("Library.Core.Domain.Bocks.Models.Bock", b =>
                {
                    b.Navigation("BocksAuthors");
                });
#pragma warning restore 612, 618
        }
    }
}
